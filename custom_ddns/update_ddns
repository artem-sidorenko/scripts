#!/bin/sh
# Custom DDNS update script
# More information at: http://www.2realities.com/howtos/linux/custom_dynamic_dns
# Licensed under BSD License: http://www.opensource.org/licenses/BSD-2-Clause
# Author: Artem Sidorenko http://2realities.com


#some settings
DNS_RECORD=yourhost.yourdomain.com
DNS_SERVER=yourdnsserver.com
DNS_ZONE=yourdomain.com
DNS_KEY_FILE="Kyourhostfile.private"
DNS_TTL="60"
STATE_FILE="/var/tmp/custom_ddns_last_ip"
#IP_DETECT_URL="http://checkip.dyndns.org/"
IP_DETECT_URL="http://automation.whatismyip.com/n09230945.asp"
PRE_UPDATE_CMD=""



#checking for our public ip
ip=`curl -4 -s -f $IP_DETECT_URL | grep -o "[[:digit:].]\+"`

if [ -z "$ip" ]; then
	echo "Can't get the public IP, no Internet connection?" >&2
	exit 1
fi

if [ -f $STATE_FILE ]; then
	old_ip=`cat $STATE_FILE`
else
	old_ip=""
fi

#ip has changed, update!
if [ "$old_ip" != "$ip" ]; then
	#some preupdate commands?
	$PRE_UPDATE_CMD
	#running dns update
	nsupdate -k $DNS_KEY_FILE <<EOF
	server $DNS_SERVER
	zone $DNS_ZONE
	update delete $DNS_RECORD
	update add $DNS_RECORD $DNS_TTL A $ip
	send
EOF
	#checking nsupdate exit status
	if [ $? -ne 0 ]; then
		echo "DNS update failed! Wrong configuration?" >&2
		exit 1
	else
		logger -t custom_ddns -- $DNS_RECORD updated to $ip
		#writing our ip to state file
		echo "$ip">$STATE_FILE
	fi
fi
